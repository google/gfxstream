load("@rules_cc//cc:defs.bzl", "cc_library")

package(
    default_visibility = ["//:gfxstream"],
)

cc_library(
    name = "gfxstream_vulkan_headers",
    hdrs = glob([
        "*.h",
    ]),
    includes = ["."],
    deps = [
        "//host/decoder_common:gfxstream_host_decoder_common",
    ],
)

cc_library(
    name = "gfxstream_vulkan_server",
    srcs = [
        "BorrowedImageVk.cpp",
        "BufferVk.cpp",
        "ColorBufferVk.cpp",
        "CompositorVk.cpp",
        "DebugUtilsHelper.cpp",
        "DependencyGraph.cpp",
        "DeviceLostHelper.cpp",
        "DeviceOpTracker.cpp",
        "DisplaySurfaceVk.cpp",
        "DisplayVk.cpp",
        "PostWorkerVk.cpp",
        "RenderThreadInfoVk.cpp",
        "SwapChainStateVk.cpp",
        "VkAndroidNativeBuffer.cpp",
        "VkCommonOperations.cpp",
        "VkDecoder.cpp",
        "VkDecoderGlobalState.cpp",
        "VkDecoderSnapshot.cpp",
        "VkDecoderSnapshotUtils.cpp",
        "VkEmulatedPhysicalDeviceMemory.cpp",
        "VkEmulatedPhysicalDeviceQueue.cpp",
        "VkFormatUtils.cpp",
        "VkReconstruction.cpp",
        "VulkanBoxedHandles.cpp",
        "VulkanDispatch.cpp",
        "VulkanHandleMapping.cpp",
        "VulkanStream.cpp",
        "vk_util.cpp",
    ] + glob([
        "**/*.h",
        "*.h",
    ]),
    hdrs = [
        "VkDecoderGlobalState.cpp",
        "VkSubDecoder.cpp",
    ],
    copts = [
        "-Wno-return-type-c-linkage",
        "-Wno-extern-c-compat",
    ],
    defines = [
        "VK_GFXSTREAM_STRUCTURE_TYPE_EXT",
        "EMUGL_BUILD",
        "BUILDING_EMUGL_COMMON_SHARED",
        "GFXSTREAM_ENABLE_HOST_GLES=1",
    ] + select({
        "@platforms//os:macos": [
            "VK_USE_PLATFORM_METAL_EXT",
            "VK_USE_PLATFORM_MACOS_MVK",
        ],
        "@platforms//os:windows": ["VK_USE_PLATFORM_WIN32_KHR"],
        "@platforms//os:linux": [],
        "//conditions:default": [],
    }),
    includes = [
        ".",
        "cereal",
        "cereal/common",
    ],
    deps = [
        "//common/base:gfxstream_common_base",
        "//common/logging:gfxstream_common_logging",
        "//host:gfxstream_host_headers",
        "//host/compressed_textures:gfxstream_host_compressed_textures",
        "//host/decoder_common:gfxstream_host_decoder_common",
        "//host/gl:gl_headers",
        "//host/gl/OpenGLESDispatch:gfxstream_host_openglesdispatch_headers",
        "//host/health:gfxstream_host_health",
        "//host/iostream:gfxstream_host_iostream",
        "//host/renderdoc:gfxstream_host_renderdoc",
        "//host/vulkan/cereal:gfxstream_vulkan_cereal",
        "//host/vulkan/emulated_textures:gfxstream_host_vulkan_emulated_textures",
        "//third_party/glm",
        "//third_party/renderdoc",
        "//third_party/vulkan:gfxstream_vulkan_headers",
    ],
)
