package {
    default_team: "trendy_team_android_developer_tools",
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "hardware_google_gfxstream_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    //   SPDX-license-identifier-MIT
    default_applicable_licenses: ["hardware_google_gfxstream_license"],
}

cc_library_static {
    name: "libgfxstream_host_vulkan_server",
    defaults: [
        "gfxstream_defaults",
        "gfxstream_host_cc_defaults",
    ],
    header_libs: [
        "libgfxstream_thirdparty_opengl_headers",
        "libgfxstream_host_vulkan_cereal_common",
        "libgfxstream_thirdparty_renderdoc_headers",
        "libgfxstream_thirdparty_glm",
    ],
    export_header_lib_headers: [
        "libgfxstream_thirdparty_renderdoc_headers",
    ],
    whole_static_libs: [
        "libgfxstream_host_tracing",
    ],
    shared_libs: [
        "liblog",
    ],
    static_libs: [
        "gfxstream_host_common",
        "libgfxstream_common_base",
        "libgfxstream_host_decoder_common",
        "libgfxstream_host_backend",
        "libgfxstream_host_compressedtextures",
        "libgfxstream_host_features",
        "libgfxstream_host_health",
        "libgfxstream_host_iostream",
        "libgfxstream_host_library",
        "libgfxstream_host_logging",
        "libgfxstream_host_openglesdispatch",
        "libgfxstream_host_snapshot",
        "libgfxstream_host_vulkan_cereal",
        "libgfxstream_host_vulkan_emulatedtextures",
    ],
    export_static_lib_headers: [
        "libgfxstream_host_health",
    ],
    cflags: [
        "-fvisibility=hidden",
        "-Wno-inconsistent-missing-override",
        "-Wno-unused-value",
        "-Wno-return-type",
        "-Wno-return-type-c-linkage",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
        "-Wno-unused-function",
        "-Wno-uninitialized",
        "-Wno-unreachable-code-loop-increment",
    ],
    srcs: [
        "BorrowedImageVk.cpp",
        "BufferVk.cpp",
        "ColorBufferVk.cpp",
        "CompositorVk.cpp",
        "DebugUtilsHelper.cpp",
        "DependencyGraph.cpp",
        "DeviceLostHelper.cpp",
        "DeviceOpTracker.cpp",
        "DisplaySurfaceVk.cpp",
        "DisplayVk.cpp",
        "PostWorkerVk.cpp",
        "RenderThreadInfoVk.cpp",
        "SwapChainStateVk.cpp",
        "vk_util.cpp",
        "VkAndroidNativeBuffer.cpp",
        "VkCommonOperations.cpp",
        "VkDecoder.cpp",
        "VkDecoderGlobalState.cpp",
        "VkDecoderSnapshot.cpp",
        "VkDecoderSnapshotUtils.cpp",
        "VkEmulatedPhysicalDeviceMemory.cpp",
        "VkEmulatedPhysicalDeviceQueue.cpp",
        "VkFormatUtils.cpp",
        "VkReconstruction.cpp",
        "VulkanBoxedHandles.cpp",
        "VulkanDispatch.cpp",
        "VulkanHandleMapping.cpp",
        "VulkanStream.cpp",
    ],
    // http://b/178667698 - clang-tidy crashes with VulkanStream.cpp
    // https://android-review.googlesource.com/c/device/generic/vulkan-cereal/+/1560695/
    // http://b/255937616 - clang-tidy can take long with VkDecoder.cpp
    tidy_disabled_srcs: [
        "VulkanStream.cpp",
        "VkDecoderGlobalState.cpp", // took more than 400 seconds
        "VkDecoder.cpp",
    ],
    export_include_dirs: [
        ".",
    ],
}

// Run with `atest --host gfxstream_vkformatutils_tests`
cc_test_host {
    name: "gfxstream_vkformatutils_tests",
    defaults: ["gfxstream_defaults"],
    srcs: [
        "VkFormatUtils_unittest.cpp",
    ],
    header_libs: [
        "libgfxstream_thirdparty_glm",
    ],
    shared_libs: [
        "libbase",
        "liblog",
    ],
    static_libs: [
        "gfxstream_host_common",
        "libgfxstream_host_logging",
        "libgfxstream_host_vulkan_server",
        "libgtest",
        "libgmock",
    ],
    test_options: {
        unit_test: true,
    },
}

// Run with `atest --host gfxstream_vkguestmemoryutils_tests`
cc_test_host {
    name: "gfxstream_vkemulatedphysicaldevicememory_tests",
    defaults: ["gfxstream_defaults"],
    srcs: [
        "VkEmulatedPhysicalDeviceMemoryTests.cpp",
    ],
    shared_libs: [
        "libbase",
        "liblog",
    ],
    static_libs: [
        "gfxstream_host_common",
        "libgfxstream_common_base",
        "libgfxstream_host_features",
        "libgfxstream_host_logging",
        "libgfxstream_host_vulkan_server",
        "libgmock",
        "libgtest",
    ],
    test_options: {
        unit_test: true,
    },
    test_suites: [
        "general-tests",
    ],
}

// Run with `atest --host gfxstream_vkutil_tests`
cc_test_host {
    name: "gfxstream_vkutil_tests",
    defaults: ["gfxstream_defaults"],
    srcs: [
        "vk_util_unittest.cpp",
    ],
    shared_libs: [
        "libbase",
        "liblog",
    ],
    header_libs: [
        "libgfxstream_host_vulkan_cereal_common",
    ],
    static_libs: [
        "libgfxstream_host_vulkan_server",
        "libgfxstream_host_logging",
        "libgtest",
        "libgmock",
    ],
    test_options: {
        unit_test: true,
    },
    test_suites: [
        "general-tests",
    ],
}

// Run with `atest --host gfxstream_vkguestqueueutils_tests`
cc_test_host {
    name: "gfxstream_vkemulatedphysicaldevicequeue_tests",
    defaults: ["gfxstream_defaults"],
    srcs: [
        "VkEmulatedPhysicalDeviceQueueTests.cpp",
    ],
    shared_libs: [
        "libbase",
        "liblog",
    ],
    static_libs: [
        "libgfxstream_common_base",
        "gfxstream_host_common",
        "libgfxstream_host_features",
        "libgfxstream_host_vulkan_server",
        "libgtest",
        "libgmock",
    ],
    test_options: {
        unit_test: true,
    },
    test_suites: [
        "general-tests",
    ],
}
