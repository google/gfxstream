load("@rules_cc//cc:defs.bzl", "cc_library")
load("//:build_variables.bzl", "GFXSTREAM_HOST_COPTS", "GFXSTREAM_HOST_DEFINES")

package(
    default_applicable_licenses = ["//:gfxstream_license"],
    default_visibility = ["//:gfxstream"],
)

cc_library(
    name = "GLES_V2_translator_static",
    srcs = [
        "ANGLEShaderParser.cpp",
        "GLESv2Context.cpp",
        "GLESv2Imp.cpp",
        "GLESv2Validate.cpp",
        "ProgramData.cpp",
        "SamplerData.cpp",
        "ShaderParser.cpp",
        "ShaderValidator.cpp",
        "TransformFeedbackData.cpp",
    ] + glob(["*.h"]),
    hdrs = [
        "GLESv2Imp.cpp",
        "GLESv30Imp.cpp",
        "GLESv31Imp.cpp",
        "GLESv32Imp.cpp",
    ],
    copts = GFXSTREAM_HOST_COPTS + [
        "-Wno-extern-c-compat",
        "-Wno-inconsistent-missing-override",
    ],
    defines = GFXSTREAM_HOST_DEFINES,
    includes = ["."],
    deps = [
        "//common/base:gfxstream_common_base",
        "//common/logging:gfxstream_common_logging",
        "//host/backend:gfxstream_host_backend",
        "//host/decoder_common:gfxstream_host_decoder_common",
        "//host/gl:gl_common",
        "//host/gl:gl_common_headers",
        "//third_party/opengl:gfxstream_gles2_headers",
        "//third_party/opengl:gfxstream_gles3_headers",
    ],
    alwayslink = True,
)
