// Copyright 2025 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either expresso or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Auto-generated with: ./scripts/gen-entries.py --mode=static_translator_namespaced_header host/gl/OpenGLESDispatch/render_egl_snapshot.entries --output=host/gl/OpenGLESDispatch/include/OpenGLESDispatch/RenderEGL_snapshot_static_translator_namespaced_header.h
// DO NOT EDIT THIS FILE

#pragma once

#include <EGL/egl.h>
#include <EGL/eglext.h>

namespace translator {
namespace egl {
EGLAPI EGLConfig EGLAPIENTRY eglLoadConfig(EGLDisplay display, EGLStreamKHR stream);
EGLAPI EGLContext EGLAPIENTRY eglLoadContext(EGLDisplay display, const EGLint * attrib_list, EGLStreamKHR stream);
EGLAPI EGLBoolean EGLAPIENTRY eglLoadAllImages(EGLDisplay display, EGLStreamKHR stream, const void* textureLoader);
EGLAPI EGLBoolean EGLAPIENTRY eglSaveConfig(EGLDisplay display, EGLConfig config, EGLStreamKHR stream);
EGLAPI EGLBoolean EGLAPIENTRY eglSaveContext(EGLDisplay display, EGLContext context, EGLStreamKHR stream);
EGLAPI EGLBoolean EGLAPIENTRY eglSaveAllImages(EGLDisplay display, EGLStreamKHR stream, const void* textureSaver);
EGLAPI EGLBoolean EGLAPIENTRY eglPreSaveContext(EGLDisplay display, EGLContext contex, EGLStreamKHR stream);
EGLAPI EGLBoolean EGLAPIENTRY eglPostLoadAllImages(EGLDisplay display, EGLStreamKHR stream);
EGLAPI EGLBoolean EGLAPIENTRY eglPostSaveContext(EGLDisplay display, EGLConfig config, EGLStreamKHR stream);
EGLAPI void EGLAPIENTRY eglUseOsEglApi(EGLBoolean enable, EGLBoolean nullEgl);
EGLAPI void EGLAPIENTRY eglSetMaxGLESVersion(EGLint glesVersion);
EGLAPI void EGLAPIENTRY eglFillUsages(void* usages);
} // namespace translator
} // namespace egl
